import { Fragment, createElement as h } from 'react';
import { GovUKPage, NotGovUKPage } from '../';
import { Route, Switch } from 'react-router-dom';
import { bem, className } from '../../helpers';
;
;
;
;
const PageError = p => (h(Fragment, null,
    p.internal ? (h(Fragment, null,
        h("h1", null, "Something went wrong..."),
        h("h2", null, p.title))) : (h("h1", { className: "govuk-heading-l" }, p.title)),
    h("p", null, p.message)));
export const Site = props => {
    const feedbackHref = props.feedback && (props.feedback.href || '/feedback');
    const Page = props.govUk ? GovUKPage : NotGovUKPage;
    const SitePage = p => (h(Page, { department: props.department, feedbackHref: feedbackHref, footerContent: props.footerContent, organisationHref: props.logoHref, navigation: props.routes.map(e => ({
            href: e.href,
            text: e.title
        })), phase: props.phase, phaseBannerContent: props.phaseBannerContent, signOutHref: props.signOutHref, signOutText: props.signOutText, serviceName: props.title, serviceHref: props.titleHref, maxContentsWidth: props.wide ? -1 : undefined }, p.children));
    const withPage = (Component) => (props) => (h(SitePage, null,
        h(Component, Object.assign({}, props))));
    const NotFoundErrorPage = withPage(({ location }) => (h(PageError, { title: "Page not found", message: `${location.pathname} does not exist.` })));
    return (h("div", { className: className(bem('nguk-site', props.govUk ? undefined : 'not-govuk'), props.className) },
        h(Switch, null,
            props.routes.map((v, i) => (h(Route, { exact: true, path: v.href, key: i, component: withPage(v.Component) }))),
            props.feedback && (h(Route, { exact: true, path: feedbackHref },
                h(SitePage, null, props.feedback.content))),
            h(Route, { component: NotFoundErrorPage }))));
};
Site.defaultProps = {
    className: null,
    department: null,
    footerContent: null,
    govUk: true,
    logoHref: 'https://www.gov.uk/',
    id: null,
    phase: null,
    phaseBannerContent: null,
    routes: [],
    signOutHref: null,
    signOutText: 'Sign out',
    title: null,
    titleHref: '/',
    wide: false
};
export default Site;
