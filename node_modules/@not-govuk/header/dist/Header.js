import { createElement as h } from 'react';
import { classBuilder } from '@not-govuk/component-helpers';
import { Link } from '@not-govuk/link';
import { WidthContainer } from '@not-govuk/width-container';
import { CrownLogo } from './CrownLogo';
import { CoatLogo } from './CoatLogo';
import '../assets/Header.scss';
const departmentMap = {
    'home-office': 'Home Office',
    'department-for-communities-and-local-government': 'DCLG',
    'department-for-culture-media-sport': 'DCMS',
    'department-for-environment-food-rural-affairs': 'DEFRA',
    'department-for-work-pensions': 'DWP',
    'foreign-commonwealth-office': 'FCO',
    'hm-revenue-customs': 'HMRC',
    'hm-treasury': 'HM Treasury',
    'ministry-of-justice': 'MoJ',
    'office-of-the-leader-of-the-house-of-lords': '',
    'scotland-office': 'Scotland Office',
    'wales-office': 'Wales Office'
};
const departmentText = (d) => (!d ? null
    : (departmentMap[d] || (d
        .split('-')
        .map(e => {
        switch (e) {
            case 'hm':
                return 'HM';
            case 'of':
                return 'o';
            case 'the':
                return '';
            default:
                return e.charAt(0).toUpperCase();
        }
    })
        .join(''))));
export const Header = ({ children, classBlock, classModifiers, className, department, govUK = false, maxContentsWidth, navigation = [], organisationHref, organisationText, serviceHref = '/', serviceName, signOutHref, signOutText = 'Sign out', ...attrs }) => {
    const classes = classBuilder('govuk-header', classBlock, classModifiers, className);
    const A = (props) => h(Link, { classBlock: classes('link'), ...props });
    const orgHref = organisationHref || (govUK ? 'https://www.gov.uk/' : '/');
    const orgText = organisationText || (govUK ? 'GOV.UK' : departmentText(department));
    const navLinks = !signOutHref ? navigation : [...navigation, {
            href: signOutHref,
            text: signOutText,
            forceExternal: true
        }];
    return (h("header", Object.assign({}, attrs, { className: classes(), role: "banner", "data-module": "govuk-header" }),
        h(WidthContainer, { maxWidth: maxContentsWidth, className: classes('container', department) },
            h("div", { className: classes('logo') },
                h(A, { href: orgHref, classModifiers: ['homepage', (orgText && orgText.length > 9) ? 'small' : undefined] },
                    h("span", { className: classes('logotype') },
                        govUK
                            ? (h(CrownLogo, { role: "presentation", focusable: "false", className: classes('logotype-crown'), height: "30", width: "36", fallback: { className: classes('logotype-crown-fallback-image'), width: 36, height: 32 } }))
                            : (h(CoatLogo, { role: "presentation", focusable: "false", className: classes('logotype-coat'), height: "30", width: "36", fallback: { className: classes('logotype-coat-fallback-image') } })),
                        "\u00A0",
                        h("span", { className: classes('logotype-text') }, orgText)))),
            h("div", { className: classes('content') },
                !serviceName ? null : (h(A, { href: serviceHref, classModifiers: "service-name" }, serviceName)),
                h("button", { type: "button", className: classes('menu-button', undefined, 'govuk-js-header-toggle'), "aria-controls": "navigation", "aria-label": "Show or hide Top Level Navigation" }, "Menu"),
                !navLinks.length ? null : (h("nav", null,
                    h("ul", { id: "navigation", className: classes('navigation'), "aria-label": "Top Level Navigation" }, navLinks.map(({ active, text, ...linkAttrs }, i) => (h("li", { key: i, className: classes('navigation-item', active ? 'active' : undefined) },
                        h(A, Object.assign({}, linkAttrs), text)))))))))));
};
export default Header;
