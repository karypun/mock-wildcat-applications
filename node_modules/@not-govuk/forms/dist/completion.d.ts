import { Context } from 'react';
import { Graph, Path, PathItem, FormatFn, PreValidateFn, ValidateFn } from './graph';
interface IFieldStatus {
    inScope: boolean;
    visible: boolean;
    seen: boolean;
    preValidate?: PreValidateFn;
    validate?: ValidateFn;
    format?: FormatFn;
}
interface IFieldStatusMap {
    [k: string]: IFieldStatus;
}
export declare class Completion {
    protected graph: Graph;
    protected path: Path;
    protected fields: IFieldStatusMap;
    protected fieldsInScope: string[];
    protected nextItem: number;
    constructor(graph: Graph);
    initialise(values: object, touched: object): void;
    updateScope(values: any): void;
    update(values: any, errors: any): void;
    formatFields(values: object): object;
    validateFields(values: object, formattedValues: object): object;
    pop(): PathItem;
    getUnseenFields(): string[];
}
export declare const CompletionContext: Context<Completion>;
export declare const useCompletionContext: () => Completion;
export default CompletionContext;
