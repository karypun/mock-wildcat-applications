/// <reference types="bunyan" />
import _restify, { plugins, ServerOptions as _ServerOptions } from 'restify';
import { ILoggerOptions } from './lib/logger';
export declare type ServerOptions = _ServerOptions & {
    bodyParser?: plugins.BodyParserOptions | false;
    grace?: number;
    liveness?: string;
    logger?: ILoggerOptions;
    queryParser?: plugins.QueryParserOptions;
    requestLogger?: plugins.RequestLogger;
};
export declare const createServer: (options: ServerOptions) => any;
export declare const restify: {
    createServer: (options: ServerOptions) => any;
    Router: typeof _restify.Router;
    bunyan: typeof _restify.bunyan;
    formatters: _restify.Formatters;
    plugins: typeof _restify.plugins;
    pre: typeof _restify.pre;
};
export default restify;
export * as errors from 'restify-errors';
export { Router } from './lib/router';
